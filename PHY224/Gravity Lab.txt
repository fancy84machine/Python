#Importing modules
from scipy import *
#p0 = p?? 

from scipy.optimize import leastsq
from numpy import *
from pylab import *

datafile = "C:\Documents and Settings\student\Desktop\length.txt"

data=loadtxt(datafile)

dY = 0.01 #Error of length
g = 9.81

#First parameter is y-intercept
#Second parameter is slope
p = 0, 4*(pi**2)/g


def residuals(p, T2, lengthIn):
    err = T2 - peval (lengthIn, p)
    return err

def peval (lengthIn, p):
    return p[0] + p[1]*lengthIn

length = arange (0, len (data), 1.0) #input data
T = arange (0, len (data), 1.0) #input data
T2 = arange (0, len (data), 1.0) #T2 = period squared
dY2 = arange (0, len (data), 1.0)

for x in range (len (data)):
    length [x] = data [x][0]
    T [x] = data [x][1]
    T2 [x] = (T[x])**2
    dY2 [x] = 2*dY*T2 [x] #Error of length propagated


plsq = leastsq(residuals,p,args=(T2,length), maxfev = 4000) #initial guess is just p


plot (length, T2, 'ko')
plot (length, peval (length, plsq [0]), 'ro-')

print 4*pi**2/plsq [0][0]  #outputs gravity constant

errorbar (length, peval (length, plsq [0]), dY2, fmt = 'r+')
show ()


#Add titles...
#Importing modules
from scipy import *
from scipy.optimize import leastsq
from numpy import *
from pylab import *

datafile = "C:\Documents and Settings\student\Desktop\length.txt" #Change file name!!

data=loadtxt(datafile)

dY = 0.5 #Change to whatever the error of theta is

#First parameter is y-intercept
#Second parameter is slope - best estimate of period of pendulum/4
p = 0, 0.2 



def residuals(p, T, theta2):
    err = T - peval (theta2, p)
    return err

def peval (theta2, p):
    return p[0] + p[1]*theta2

theta = arange (0, len (data), 1.0) #data inputed
T = arange (0, len (data), 1.0) #input data
theta2 = arange (0, len (data), 1.0) # 0.25*sin (theta/2)
dY2 = arange (0, len (data), 1.0) #error of 0.25*sin (theta/2)

for x in range (len (data)):
    theta [x] = data [x][0]
    T [x] = data [x][1]
    theta2 [x] = (sin (theta [x]/2))**2
    dY2 [x] = 0.25/4*cos (theta [x]/2)*dY 


plsq = leastsq(residuals,p,args=(T,theta2), maxfev = 4000) #initial guess is just p

plot (theta2, T, 'ko')
plot (theta2, peval (theta2, plsq [0]), 'ro-')

print plsq [0][0]/4 #Outputs T0

errorbar (theta2, peval (theta2, plsq [0]), dY2, fmt = 'r+')
show ()
